!function(e){var n={};function t(s){if(n[s])return n[s].exports;var o=n[s]={i:s,l:!1,exports:{}};return e[s].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,s){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:s})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(t.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(s,o,function(n){return e[n]}.bind(null,o));return s},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s="./windows/background/background.ts")}({"./consts.ts":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.tableStats=n.gameModesPVE=n.gameModesPVP=n.hotkeys=n.windowNames=n.interestingFeatures=n.rainbowClassId=void 0;n.rainbowClassId=10826;n.interestingFeatures=["gep_internal","game_info","match","match_info","roster","kill","death","me"];n.windowNames={inGame:"in_game",desktop:"desktop"};n.hotkeys={toggle:"showhide"};n.gameModesPVE=["OPERATIONS","MATCHMAKING_PVE_LONEWOLF","MATCHMAKING_PVE"];n.gameModesPVP=["MATCHMAKING_PVP_NEWCOMER","MATCHMAKING_PVP","MATCHMAKING_PVP_EVENT","MATCHMAKING_PVP_UNRANKED","MATCHMAKING_PVP_RANKED","CUSTOMGAME_PVP","CUSTOMGAME_PVP_DEDICATED"];n.tableStats=["rankedpvp_kills","rankedpvp_death","rankedpvp_matchwon","rankedpvp_matchlost","casualpvp_kills","casualpvp_death","casualpvp_matchwon","casualpvp_matchlost","kills","deaths","wins","losses"]},"./odk-ts/ow-game-listener.ts":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.OWGameListener=void 0;const s=t("./odk-ts/ow-listener.ts");n.OWGameListener=class extends s.OWListener{constructor(e){super(e),this.onGameInfoUpdated=(e=>{e&&e.gameInfo&&(e.runningChanged||e.gameChanged)&&(e.gameInfo.isRunning?this._delegate.onGameStarted&&this._delegate.onGameStarted(e.gameInfo):this._delegate.onGameEnded&&this._delegate.onGameEnded(e.gameInfo))}),this.onRunningGameInfo=(e=>{e&&e.isRunning&&this._delegate.onGameStarted&&this._delegate.onGameStarted(e)})}start(){super.start(),overwolf.games.onGameInfoUpdated.addListener(this.onGameInfoUpdated),overwolf.games.getRunningGameInfo(this.onRunningGameInfo)}stop(){overwolf.games.onGameInfoUpdated.removeListener(this.onGameInfoUpdated)}}},"./odk-ts/ow-games.ts":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.OWGames=void 0;n.OWGames=class{static getRunningGameInfo(){return new Promise(e=>{overwolf.games.getRunningGameInfo(e)})}static classIdFromGameId(e){return Math.floor(e/10)}static async getRecentlyPlayedGames(e=3){return new Promise(n=>{if(!overwolf.games.getRecentlyPlayedGames)return n(null);overwolf.games.getRecentlyPlayedGames(e,e=>{n(e.games)})})}static async getGameDBInfo(e){return new Promise(n=>{overwolf.games.getGameDBInfo(e,n)})}}},"./odk-ts/ow-listener.ts":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.OWListener=void 0;n.OWListener=class{constructor(e){this._delegate=e}start(){this.stop()}}},"./odk-ts/ow-window.ts":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.OWWindow=void 0;n.OWWindow=class{constructor(e=null){this._name=e,this._id=null}async restore(){let e=this;return new Promise(async n=>{await e.assureObtained();let t=e._id;overwolf.windows.restore(t,e=>{e.success||console.error(`[restore] - an error occurred, windowId=${t}, reason=${e.error}`),n()})})}async minimize(){let e=this;return new Promise(async n=>{await e.assureObtained();let t=e._id;return overwolf.windows.minimize(t,()=>{}),n()})}async maximize(){let e=this;return new Promise(async n=>{await e.assureObtained();let t=e._id;return overwolf.windows.maximize(t,()=>{}),n()})}async hide(){let e=this;return new Promise(async n=>{await e.assureObtained();let t=e._id;return overwolf.windows.hide(t,()=>{}),n()})}async close(){let e=this;return new Promise(async n=>{await e.assureObtained(),e._id;const t=await this.getWindowState();return t.success&&"closed"!==t.window_state&&await this.internalClose(),n()})}async changeWindowSize(e,n){overwolf.windows.changeSize("in_game",e,n,e=>{e.success})}async changeWindowLocation(e){overwolf.windows.getCurrentWindow(n=>{if(!n.success)return;let t=n.window.width,s=n.window.height;overwolf.utils.getMonitorsList(o=>{if(!n.success)return;let i,a,r=o.displays[0].width,d=o.displays[0].height;"center-center"==e?(i=r/2-t/2,a=d/2-s/2):"center-right"==e?(i=r-t-20,a=d/2-s/2):"center-left"==e&&(i=20,a=d/2-s/2),overwolf.windows.changePosition("in_game",Math.round(i),Math.round(a),e=>{e.success})})})}dragMove(e){e.onmousedown=(e=>{e.preventDefault(),overwolf.windows.dragMove(this._name)})}async getWindowState(){let e=this;return new Promise(async n=>{await e.assureObtained();let t=e._id;overwolf.windows.getWindowState(t,n)})}static async getCurrentInfo(){return new Promise(async e=>{overwolf.windows.getCurrentWindow(n=>{e(n.window)})})}obtain(){return new Promise((e,n)=>{const t=t=>{t&&"success"===t.status&&t.window&&t.window.id?(this._id=t.window.id,this._name||(this._name=t.window.name),e(t.window)):(this._id=null,n())};this._name?overwolf.windows.obtainDeclaredWindow(this._name,t):overwolf.windows.getCurrentWindow(t)})}async assureObtained(){let e=this;return new Promise(async n=>(await e.obtain(),n()))}async internalClose(){let e=this;return new Promise(async(n,t)=>{await e.assureObtained();let s=e._id;overwolf.windows.close(s,e=>{e&&e.success?n():t(e)})})}}},"./windows/background/background.ts":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const s=t("./consts.ts"),o=t("./odk-ts/ow-games.ts"),i=t("./odk-ts/ow-game-listener.ts"),a=t("./odk-ts/ow-window.ts");class r{constructor(){this._windows={},this._windows[s.windowNames.desktop]=new a.OWWindow(s.windowNames.desktop),this._windows[s.windowNames.inGame]=new a.OWWindow(s.windowNames.inGame),this._rainbowGameListener=new i.OWGameListener({onGameStarted:this.toggleWindows.bind(this),onGameEnded:this.toggleWindows.bind(this)})}static instance(){return r._instance||(r._instance=new r),r._instance}async run(){this._rainbowGameListener.start();const e=await this.isRainbowRunning()?s.windowNames.inGame:s.windowNames.desktop;this._windows[e].restore()}toggleWindows(e){e&&this.isGameRainbow(e)&&(e.isRunning?(this._windows[s.windowNames.desktop].close(),this._windows[s.windowNames.inGame].restore()):(this._windows[s.windowNames.inGame].close(),this._windows[s.windowNames.desktop].restore()))}async isRainbowRunning(){const e=await o.OWGames.getRunningGameInfo();return e&&e.isRunning&&this.isGameRainbow(e)}isGameRainbow(e){return e.classId===s.rainbowClassId}}r.instance().run()}});
